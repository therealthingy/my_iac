---
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  TODO: ADD ACTUAL BREW INSTALLATION STEPS  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
- name: Install packages (I)
  ansible.builtin.import_tasks: ../../linux/roles/common/tasks/package-SHARED.yml


- name: Scripts
  block:
    - name: Create dir
      ansible.builtin.file:
        path: '/Users/{{ user_name }}/bin'
        state: directory
        owner: '{{ user_name }}'
        group: '{{ user_name }}'
        mode: 0755
    - name: Copy scripts
      ansible.builtin.template:
        src: '{{ config_file.src }}'
        dest: '{{ config_file.dest_file }}'
        owner: '{{ config_file.owner }}'
        group: '{{ config_file.group }}'
        mode: 0644
      with_items:
        - { src: 'bin/home/git-update_repos', dest_file: '/Users/{{ user_name }}/bin/git-update_repos', owner: '{{ user_name }}', group: '{{ user_name }}' }
        - { src: 'bin/usr/dd-obs_test', dest_file: '/usr/local/bin/dd-obs_test', owner: 'root', 'wheel' }
      loop_control:
        loop_var: config_file
      become: false


- name: Finder services
  ansible.builtin.copy:
    src: 'finder-workflows/{{ config_file }}'
    dest: '/Users/{{user_name}}/Library/Services/{{ config_file }}'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: 0755
  with_items:
    - 'Clean LaTeX Junk.workflow'
    - 'Combine PDFs.workflow'
    - 'Convert PDFs to images.workflow'
    - 'MP4 to MP3.workflow'
    - 'Video to GIF.workflow'
  loop_control:
    loop_var: config_file
  become: false



- name: Install Joplin
  block:
    - name: Install
      ansible.builtin.debug:
        msg: "TODO"
    - name: Config
      block:
        - name: Create dir
          ansible.builtin.file:
            path: '/Users/{{ user_name }}/.config/joplin-desktop'
            state: directory
            owner: '{{ user_name }}'
            group: '{{ user_name }}'
            mode: 0755
        - name: Copy config
          ansible.builtin.template:
            src: apps/joplin.css
            dest: '/Users/{{ user_name }}/.config/joplin-desktop/basenotestyle.css'
            mode: 0755
      become: false



- name: Install iTerm
  block:
    - name: Install
      ansible.builtin.debug:
        msg: "TODO"
    - name: Config
      block:
        - name: Create dir
          ansible.builtin.file:
            path: '/Users/{{ user_name }}/.config/iTerm'
            state: directory
            owner: '{{ user_name }}'
            group: '{{ user_name }}'
            mode: 0755
        - name: Copy config
          ansible.builtin.copy:
            src: apps/com.googlecode.iterm2.plist
            dest: '/Users/{{ user_name }}/.config/iTerm/com.googlecode.iterm2.plist'
            mode: 0755
        - name: Set config
          ansible.builtin.debug:
            msg: "TODO    (`defaults write com.googlecode.iterm2 PrefsCustomFolder -string '<path-to-dir-NOT-2-FILE>'`   ---   `defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder -bool true`)"
      become: false



- name: Install hblock
  block:
    - name: Install
      ansible.builtin.debug:
        msg: "TODO"
    - name: Config
      block:
        - name: Create dir
          ansible.builtin.file:
            path: '/etc/hblock.d'
            state: directory
            owner: 'root'
            group: 'wheel'
            mode: 0755
        - name: Copy config
          ansible.builtin.copy:
            src: 'config/hblock/{{ config_file }}'
            dest: '/etc/hblock.d/{{ config_file }}'
            owner: 'root'
            group: 'wheel'
            mode: 0755
          with_items:
            - 'header'
            - 'blacklist.list'
            - 'whitelist.list'
          loop_control:
            loop_var: config_file
        - name: Setup cron job
          ansible.builtin.debug:
            msg: "TODO     (sudo crontab -l -u root | awk '!/hblock/' | { cat; echo \"${CRON_TIME}  ${HBLOCK_COMMAND}\"; } | sudo crontab -u root -)"
      become: true


# TODO: tmux + htop settings
