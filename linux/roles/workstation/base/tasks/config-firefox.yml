---
- name: Install dependencies required for Firefox config
  ansible.builtin.pip:
    name:
      - requests

- name: Set config (as fact)
  ansible.builtin.set_fact:
    firefox_home: '/home/{{ user_name }}/.mozilla/firefox'
    firefox_profiles:
      default:
        extensions:
          # URL on addons.mozilla.org
          - startpage-private-search
          - ublock-origin
          - umatrix
          - darkreader
          - save-page-we
          - i-dont-care-about-cookies
        # Privacy friendly settings reference: https://github.com/arkenfox/user.js/blob/master/user.js
        preferences:
          browser.aboutConfig.showWarning: false
          # Disable "Recommend extensions / features as you browse"
          browser.discovery.enabled: false
          browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons: false
          browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features: false
          browser.shell.checkDefaultBrowser: false
          # 0=blank, 1=home, 2=last visited page, 3=resume previous session
          browser.startup.page: 1
          browser.startup.homepage: "about:home"
          browser.newtabpage.enabled: true
          browser.newtab.preload: false
          browser.newtabpage.activity-stream.feeds.telemetry: false
          browser.newtabpage.activity-stream.telemetry: false
          browser.newtabpage.activity-stream.feeds.snippets: false
          browser.newtabpage.activity-stream.feeds.section.topstories: false
          browser.newtabpage.activity-stream.section.highlights.includePocket: false
          browser.newtabpage.activity-stream.showSponsored: false
          browser.newtabpage.activity-stream.feeds.discoverystreamfeed: false
          browser.newtabpage.activity-stream.showSponsoredTopSites: false
          browser.newtabpage.activity-stream.default.sites: ''
          browser.newtabpage.activity-stream.feeds.section.topstories.options: ''
          dom.gamepad.enabled: false
          dom.vr.enabled: false
          dom.vibrator.enabled: false
          extensions.pocket.enabled: false
          extensions.pocket.api: ''
          extensions.pocket.oAuthConsumerKey: ''
          extensions.pocket.site: "''"
          geo.provider.network.url: "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%"
          geo.provider.ms-windows-location: false   # Windows
          geo.provider.use_corelocation: false      # Mac
          geo.provider.use_gpsd: false              # Linux
          browser.region.network.url: ''
          browser.region.update.enabled: false
          intl.accept_languages: 'en-US, en'
          javascript.use_us_english_locale: true
          extensions.getAddons.showPane: false
          extensions.htmlaboutaddons.recommendations.enabled: false
          datareporting.policy.dataSubmissionEnabled: false
          datareporting.healthreport.uploadEnabled: false
          toolkit.telemetry.unified: false
          toolkit.telemetry.enabled: false
          toolkit.telemetry.server: 'data:,'
          toolkit.telemetry.archive.enabled: false
          toolkit.telemetry.newProfilePing.enabled: false
          toolkit.telemetry.shutdownPingSender.enabled: false
          toolkit.telemetry.updatePing.enabled: false
          toolkit.telemetry.bhrPing.enabled: false
          toolkit.telemetry.firstShutdownPing.enabled: false
          toolkit.telemetry.coverage.opt-out: true
          toolkit.coverage.opt-out: true
          toolkit.coverage.endpoint.base: ''
          browser.ping-centre.telemetry: false
          app.shield.optoutstudies.enabled: false
          app.normandy.enabled: false
          app.normandy.api_url: ''
          breakpad.reportURL: ''
          browser.tabs.crashReporting.sendReport: false
          browser.crashReports.unsubmittedCheck.autoSubmit2: false
          browser.safebrowsing.downloads.remote.enabled: false
          #browser.places.speculativeConnect.enabled: false
          browser.fixup.alternate.enabled: false            # disable location bar domain guessing
          browser.search.suggest.enabled: false             # location bar
          browser.urlbar.suggest.searches: false
          browser.urlbar.speculativeConnect.enabled: false
          browser.urlbar.suggest.quicksuggest.nonsponsored: false
          browser.urlbar.suggest.quicksuggest.sponsored: false
          browser.formfill.enable: false                    # Search & form history
          extensions.formautofill.addresses.enabled: false  # Autofill
          extensions.formautofill.available: 'off'
          extensions.formautofill.creditCards.available: false
          extensions.formautofill.creditCards.enabled: false
          extensions.formautofill.heuristics.enabled: false
          # disable auto-filling username & password form fields
          signon.rememberSignons: false
          signon.autofillForms: false
          #security.ssl.require_safe_negotiation: true
          #security.tls.enable_0rtt_data: false
          beacon.enabled: false
          privacy.sanitize.sanitizeOnShutdown: true
          privacy.clearOnShutdown.cache: true
          privacy.clearOnShutdown.downloads: true
          privacy.clearOnShutdown.formdata: true
          privacy.clearOnShutdown.history: true
          privacy.clearOnShutdown.sessions: true
          privacy.clearOnShutdown.offlineApps: false
          privacy.resistFingerprinting: true
          privacy.resistFingerprinting.block_mozAddonManager: true
          browser.messaging-system.whatsNewPanel.enabled: false
    become: false

- name: "Workaround (since `include_role` doesn't accept `become`)"
  block:
    - name: Run firefox config role
      ansible.builtin.include_role:
        name: staticdev.firefox
  become: false
