---
- name: Setup GNOME
  block:
    - name: Install dconf edtior
      ansible.builtin.apt:
        name: dconf-editor
        state: present
      become: true

    - name: '[Ubuntu] Replace GNOME extension manager'
      ansible.builtin.apt:
        name: '{{ ui_shell_ext.package }}'
        state: '{{ ui_shell_ext.state }}'
      loop_control:
        loop_var: ui_shell_ext
      with_items:
        - { package: gnome-shell-extension-manager, state: present }
        - { package: gnome-shell-extension-prefs, state: absent }
      when: ansible_facts.distribution == 'Ubuntu'
      become: true


    # NOTE: List extensions: `gnome-extensions list --enabled`
    - name: Install GNOME extensions
      block:
        - name: Install dependencies for GNOME extensions
          ansible.builtin.apt:
            name:
              - gir1.2-gtop-2.0                     # Top Hat  (like iStats menu 4 mac)
            state: present
          become: true

        - name: "'Determine' which extensions shall be installed"
          block:
            - name: Set config as vars
              ansible.builtin.set_fact:
                gnome_extensions:  # (ids are dervied from URL, e.g., https://extensions.gnome.org/extension/307/dash-to-dock/)
                    - id: 2087                      # Desktop Icons NG (DING)
                      enable: true       # TODO: Currently not working ??!!
                    - id: 3193                      # Blur my Shell
                      enable: true
                    - id: 5219                      # Top Hat  (like iStats menu 4 mac)
                      enable: true
                    - id: 4839                      # Clipboard history
                      enable: true
                    # TODO (for non-vms): caffeine, cpufreq, wireguard-indicator

            - name: Debian - Set distro specific stuff
              ansible.builtin.set_fact:
                # Dash to Dock
                gnome_extensions: "{{ gnome_extensions + [ { 'id': 307, 'enable': true } ]  }}"
              when: ansible_facts.distribution == 'Debian'

        - name: "Run 'customize-gnome' role"
          ansible.builtin.include_role:
            name: petermosmans.customize-gnome

    # HOW2: gesettings tool  (e.g., `gsettings get org.gnome.desktop.input-sources sources`); example: https://gist.github.com/carlwgeorge/c560a532b6929f49d9c0df52f75a68ae
    - name: GNOME - Set settings
      community.general.dconf:
        key: '{{ gnome_setting.key }}'
        value: '{{ gnome_setting.value }}'
        state: '{{ gnome_setting.state }}'
      with_items:
        # !!  BE AWARE: Schema for gtk (used by `gsettings`): `org.gtk.Settings.FileChooser` vs. Path (used by dconf editor and Ansible module): `org.gtk.settings.file-chooser`  !!
        # --  General settings  --
    #    - { key: '/org/gnome/desktop/input-sources/sources', value: "[('xkb', 'de')]", state: present }

        # --  General Behvaior  --
        - { key: '/org/gnome/desktop/privacy/show-full-name-in-top-bar', value: 'true', state: present }
        - { key: '/org/gnome/desktop/privacy/remember-recent-files', value: 'false', state: present }
        - { key: '/org/gnome/desktop/privacy/remove-old-temp-files', value: 'true', state: present }
        - { key: '/org/gnome/desktop/sound/event-sounds', value: 'false', state: present }
        - { key: '/org/gnome/desktop/wm/preferences/audible-bell', value: 'false', state: present }           # TODO: Use `visual-bell`` bell instead (currently not suitable (flashes entire screen))
        - { key: '/org/gnome/desktop/notifications/show-banners', value: 'false', state: present }            # 'Do not disturb' in Ubuntu's Settings app
        - { key: '/org/gnome/gnome-session/logout-prompt', value: 'false', state: present }
        # -  Power  -
        - { key: '/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type', value: "'nothing'", state: present }
        - { key: '/org/gnome/desktop/session/idle-delay', value: 'uint32 0', state: present }                 # Don't show black screen after idle timeout
        # -  Privacy  -
        - { key: '/org/gnome/desktop/privacy/report-technical-problems', value: 'false', state: present }
        - { key: '/org/gnome/desktop/privacy/send-software-usage-stats', value: 'false', state: present }
        # -  Security  -
        - { key: '/org/gnome/desktop/media-handling/automount-open', value: 'false', state: present }

        # --  General UI  --
        - { key: '/org/gnome/desktop/interface/clock-format', value: "'12h'", state: present }
        - { key: '/org/gtk/settings/file-chooser/clock-format', value: "'12h'", state: present }
        - { key: '/org/gnome/shell/favorite-apps', value: "[{{ dock_favorite_apps|join(', ') }}]", state: present }  # NOTE: Desktop entries for application (.desktop files) reside in '/usr/share/applications/' or '/usr/local/share/applications/'
        - { key: '/org/gnome/desktop/wm/preferences/button-layout', value: "'close,minimize,maximize:'", state: present }
        # --  Extensions  --
        # -  Dock  -
        - { key: '/org/gnome/shell/extensions/dash-to-dock/extend-height', value: 'false', state: present }
        - { key: '/org/gnome/shell/extensions/dash-to-dock/dock-position', value: "'LEFT'", state: present }
        - { key: '/org/gnome/shell/extensions/dash-to-dock/dash-max-icon-size', value: '25', state: present }
        - { key: '/org/gnome/shell/extensions/dash-to-dock/dock-fixed', value: 'true', state: present }
        - { key: '/org/gnome/shell/extensions/dash-to-dock/click-action', value: "'minimize'", state: present }
        # -  Desktop  -
        - { key: '/org/gnome/shell/extensions/ding/show-home', value: 'false', state: present }
        - { key: '/org/gnome/shell/extensions/ding/show-trash', value: 'false', state: present }
        - { key: '/org/gnome/shell/extensions/ding/icon-size', value: "'small'", state: present }
        - { key: '/org/gnome/shell/extensions/ding/show-link-emblem', value: 'true', state: present }
        - { key: '/org/gnome/shell/extensions/ding/start-corner', value: "'top-left'", state: present }

        # --  Apps  --
        # -  Nautilus  --
        - { key: '/org/gnome/nautilus/preferences/show-delete-permanently', value: 'true', state: present }
        - { key: '/org/gnome/nautilus/preferences/default-sort-order', value: "'type'", state: present }         # Possible values: size, type, mtime, atime, starred
        - { key: '/org/gnome/nautilus/preferences/default-sort-in-reverse-order', value: 'false', state: present }
        - { key: '/org/gnome/nautilus/preferences/default-folder-viewer', value: "'list-view'", state: present } # Possible values: icon-view, list-view
        - { key: '/org/gnome/nautilus/list-view/default-zoom-level', value: "'small'", state: present }
        - { key: '/org/gnome/nautilus/list-view/default-visible-columns', value: "['name', 'type', 'size', 'date_modified']", state: present }
        - { key: '/org/gnome/nautilus/list-view/use-tree-view', value: 'true', state: present }
        - { key: '/org/gtk/settings/file-chooser/show-hidden', value: 'true', state: present }
        # -  dconf  -
        - { key: '/ca/desrt/dconf-editor/show-warning', value: 'false', state: present }
      loop_control:
        loop_var: gnome_setting
      become: false

    - name: Set installed apps as default
      ansible.builtin.copy:
        src: registered_default_apps.list
        dest: '/home/{{ user_name }}/.config/mimeapps.list'
      become: false
  when: "'GNOME' in desktop_envs"



- name: gdm3 - Enable Autologin
  block:
    - name: Check whether gdm3 is used
      ansible.builtin.package_facts:
        manager: auto

    - name: 'Enable autologin for {{ user_name }}'
      block:
        - name: Set autologin config file
          ansible.builtin.set_fact:
            gdm3_config_file: "{{ 'daemon.conf' if ansible_facts.distribution == 'Debian' else 'custom.conf' }}"
          become: false

        - name: Update config file
          ansible.builtin.replace:
            path: '/etc/gdm3/{{ gdm3_config_file }}'
            # UNMATCH IF NAME is already contained: '^(#\s*|\s*)AutomaticLoginEnable\s*=\s*(true|false)\n^(#\s*|\s*)AutomaticLogin\s*=\s*(?!{{ user_name }}$)\w+$'  (doesn't work -- PROBLEM: name unmatches, which causes it not to be updated if it's commented out)
            regexp: '^#\s*AutomaticLoginEnable\s*=\s*(true|false)\n^#\s*AutomaticLogin\s*=\s*\w+$'
            replace: |
              AutomaticLoginEnable = true
              AutomaticLogin = {{ user_name }}
          become: true
      when: "'gdm3' in ansible_facts.packages"
