---
- name: Install zsh
  ansible.builtin.apt:
    name:
      - zsh
    state: present


- name: Create zsh config dir
  become: false
  ansible.builtin.file:
    path: '/home/{{ user_name }}/.config/zsh/'
    state: directory
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: 0755

- name: Install oh-my-zsh
  become: false
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: '/home/{{ user_name }}/.oh-my-zsh/'
    clone: true
    depth: 1
    update: true

- name: Install oh-my-zsh plugins
  become: false
  ansible.builtin.git:
    repo: 'https://github.com/zsh-users/{{ plugin }}'
    dest: '/home/{{ user_name }}/.oh-my-zsh/custom/plugins/{{ plugin }}/'
    clone: true
    depth: 1
    update: true
  with_items:
    - 'zsh-syntax-highlighting'
    - 'zsh-autosuggestions'
  loop_control:
    loop_var: plugin

- name: Install oh-my-zsh theme
  become: false
  ansible.builtin.git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    dest: '/home/{{ user_name }}/.oh-my-zsh/custom/themes/powerlevel10k/'
    clone: true
    depth: 1
    update: true


- name: Copy zsh config files
  become: false
  ansible.builtin.copy:
    src: '{{ config_file.src }}'
    dest: '/home/{{ user_name }}/.config/zsh/{{ config_file.dest_file }}'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: 0644
  with_items:
    - { src: 'zsh/zshenv', dest_file: '.zshenv' }
    - { src: 'zsh/zshfunc', dest_file: '.zshfunc' }
    - { src: 'zsh/p10k', dest_file: '.p10k.zsh' }
    - { src: 'zsh/zshrc', dest_file: '.zshrc' }
  loop_control:
    loop_var: config_file

- name: Set zsh config dir
  become: false
  ansible.builtin.file:
    src: '/home/{{ user_name }}/.config/zsh/.zshenv'
    dest: '/home/{{ user_name }}/.zshenv'
    state: link


- name: Change shell
  ansible.builtin.user:
    name: '{{ user_name }}'
    shell: /bin/zsh
