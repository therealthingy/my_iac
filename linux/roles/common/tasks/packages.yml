---
- name: Update and upgrade apt packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    upgrade: dist
    clean: true
    autoremove: true
    allow_downgrade: true
  become: true


- name: Install file general purpose tools
  ansible.builtin.apt:
    name:
      - libc-bin                      # Collection of helper programs, so called binary tools, that work in conjunction with libc  (`iconv`, ..)
      - file
      - tree
      - rename
      - detox                         # Renames files to make them easier to work w/ under Unix & related OSes
      - fdupes
      - dos2unix
      - rsync
      - rclone                        # Cloud storage management software
      - lsof
    state: present
  become: true

- name: nvim
  block:
    - name: nvim - Install
      ansible.builtin.apt:
        name:
          - neovim
      become: true
    - name: Configure
      block:
        - name: "nvim - Set 'alternatives'"
          community.general.alternatives:
            name: '{{ common_nvim_alt.name }}'
            link: '{{ common_nvim_alt.link }}'
            path: '{{ common_nvim_alt.path }}'
          with_items:
            - { name: editor, link: /usr/bin/editor, path: /usr/bin/nvim }
            - { name: vi,     link: /usr/bin/vi,     path: /usr/bin/nvim }
          loop_control:
            loop_var: common_nvim_alt
          become: true
        - name: Config
          block:
            - name: nvim - vim config
              ansible.builtin.copy:
                dest: '/home/{{ user_name }}/.vimrc'
                content: |
                  set nu
            - name: Config (II)
              block:
                - name: nvim - Create config dir
                  ansible.builtin.file:
                    path: '/home/{{ user_name }}/.config/nvim'
                    state: directory
                - name: nvim - nvim config
                  ansible.builtin.copy:
                    dest: '/home/{{ user_name }}/.config/nvim/init.vim'
                    content: |
                      source ~/.vimrc
          become: false

- name: Install file archiving tools
  ansible.builtin.apt:
    name:
      - pigz
      - pbzip2
      - zip
      - unzip
    state: present
  become: true

- name: Install backup tools
  ansible.builtin.apt:
    name:
      - borgbackup
    state: present
  become: true

- name: Monitoring tools
  block:
    - name: Install monitoring tools (I)
      ansible.builtin.apt:
        name:
          - neofetch
          - atop
          - htop
          - dstat                         # System monitoring tool  (allows monitoring system resources such as cpu, memory, disk & network stats) -> replacement 4 `vmstat`, `iostat` & `ifstat`
          - psmisc                        # Utilities that use the proc file-system (`fuser` - Identifies processes using files or sockets, `killall` - kills processes by name, `prtstat` - prints process statistics, `pslog` - prints log path(s) of a process, `pstree` - shows currently running processes as a tree, `peekfd` - shows data travelling over a fildes)
          - iotop
          - powertop
          - sysstat                       # `sar` (can be used 2 monitor Linux systemâ€™s resources like CPU usage, memory utilization, I/O devices consumption, etc.), `iostat`
          - usbutils                      # `lsusb`
        state: present
    - name: Install monitoring tools (II)
      ansible.builtin.apt:
        name:
          - smartmontools                 # `smartctl` & `smartd` 4 controlling & monitoring SMART storage
          - hdparm                        # Allows setting & viewing ATA hd drive HW params & test performance
          - nvme-cli
          - lm-sensors                    # `sensors`
      when:
        - "'rpis' not in group_names"
        - "'vmware_vms' not in group_names"
  become: true

- name: Install networking tools
  ansible.builtin.apt:
    name:
      - nmap
      - netcat
      - socat
      - tcpdump
      - iproute2                      # `ip`;   NOTE: package 'net-tools' has been deprecated
      - dnsutils                      # `dig`
      - wget
      - curl
      - iperf
      - speedtest-cli
    state: present
  become: true

- name: Administration tools
  block:
    - name: Install administration tools
      ansible.builtin.apt:
        name:
          - sudo
          - aptitude
          - util-linux                    # Most likely already installed (contains MANY utilities)  (`lscpu``, `lspci``, ...)
          - software-properties-common    # abstraction of the used apt repositories (allows easily managing distribution & independent software vendor software sources)  -> `add-apt-repository`, `apt-add-repository`
          - needrestart                   # NOTE: 2 check whether reboot is pending: `sudo needrestart -r i`
          - ssh
          - mosh
          #- stow                          # See https://www.gnu.org/software/stow/
          # FS stuff
          #- btrfs-progs
          #- fuse
          #- ntfs-3g                        # Read/write NTFS driver 4 FUSE
          #- libapfs-utils                  # Contains `fsapfsinfo`, an APFS information retrieval utility, & `fpafsmount`, a FUSE-based APFS filesystem implementation
        state: present
      become: true

    - name: Install + configure tmux
      block:
        - name: Install tmux
          ansible.builtin.apt:
            name: tmux
            state: present
          become: true
        - name: Copy config file
          ansible.builtin.copy:
            src: tmux.conf
            dest: '/home/{{ user_name }}/.tmux.conf'
            owner: '{{ user_name }}'
            group: '{{ user_name }}'
            mode: 0644
          become: false

- name: Privacy tools
  block:
    - name: Install privacy tools
      ansible.builtin.apt:
        name:
          - ccrypt
          - cryptsetup
          - zerofree
        state: present

    - name: Install luks sparse file helper
      ansible.builtin.template:
        src: luks-sparse_helper.j2
        dest: /usr/local/bin/luks-sparse_helper
        owner: root
        group: root
        mode: 0755
  become: true


- name: Install shell related tools
  ansible.builtin.apt:
    name:
      - moreutils
      - parallel                      # NOTE: Installs also `parallel` like `moreutils`  (but seems 2 be newer version)
      - procps                        # `watch`, `pmap` command
      - pv
      - uuid
    state: present
  become: true


# (!!  ALSO REQUIRED FOR ZSH  !!)
- name: git
  block:
    - name: Install git
      ansible.builtin.apt:
        name:
          - git
          - git-lfs
        state: present
      become: true
#    - name: Init git LFS for current user        # TODO: NOT  IDEMPOTENT ???
#      ansible.builtin.command: git lfs install
#      become: false


- ansible.builtin.include_tasks: '{{ item }}'
  loop:
    - package-python.yml
    - package-zsh.yml
#    - package-nala.yml
