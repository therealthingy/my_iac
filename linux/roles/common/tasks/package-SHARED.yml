---
# SHARED b/w darwin & linux
- name: Install zsh
  block:
    - name: Install
      block:
        - name: zsh - Install
          ansible.builtin.apt:
            name:
              - zsh
            state: present
          when: ansible_facts['os_family'] != "Darwin"
        - name: zsh - Install
          ansible.builtin.debug:
            msg: "TODO"
          when: ansible_facts['os_family'] == "Darwin"
      become: true

    - name: zsh - Create zsh config dir
      ansible.builtin.file:
        path: '{{os_homedir}}/{{ user_name }}/.config/zsh/'
        state: directory
        owner: '{{ user_name }}'
        group: '{{ user_name }}'
        mode: 0755
      become: false

    - name: zsh - Install oh-my-zsh
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: '{{os_homedir}}/{{ user_name }}/.config/zsh/.oh-my-zsh/'
        clone: true
        depth: 1
        update: true
      become: false

    - name: zsh - Install oh-my-zsh plugins
      ansible.builtin.git:
        repo: 'https://github.com/zsh-users/{{ plugin }}'
        dest: '{{os_homedir}}/{{ user_name }}/.config/zsh/.oh-my-zsh/custom/plugins/{{ plugin }}/'
        clone: true
        depth: 1
        update: true
      with_items:
        - 'zsh-syntax-highlighting'
        - 'zsh-autosuggestions'
      loop_control:
        loop_var: plugin
      become: false

    - name: zsh - Install fonts for Powerlevel10k theme (ONLY required when using Terminal Emulators in Desktop environments)
      ansible.builtin.apt:
        name:
          - fonts-powerline
        state: present
      when: ansible_facts['os_family'] != "Darwin"
      become: true

    - name: zsh - Install Powerlevel10k theme
      ansible.builtin.git:
        repo: 'https://github.com/romkatv/powerlevel10k.git'
        dest: '{{os_homedir}}/{{ user_name }}/.config/zsh/.oh-my-zsh/custom/themes/powerlevel10k/'
        clone: true
        depth: 1
        update: true
      become: false

    - name: zsh - Copy config files I
      ansible.builtin.template:
        src: '{{ config_file.src }}'
        dest: '{{os_homedir}}/{{ user_name }}/.config/zsh/{{ config_file.dest_file }}'
        owner: '{{ user_name }}'
        group: '{{ user_name }}'
        mode: 0644
      with_items:
        - { src: 'zsh/zshenv.j2', dest_file: '.zshenv' }
        - { src: 'zsh/p10k.j2', dest_file: '.p10k.zsh' }    # 'Generated' using `p10k configure` (and just copied)
      loop_control:
        loop_var: config_file
      become: false

    - name: zsh - Copy config files II
      ansible.builtin.template:
        src: '{{ config_file.src }}'
        dest: '{{os_homedir}}/{{ user_name }}/.config/zsh/{{ config_file.dest_file }}'
      with_items:
        - { src: 'zsh/zshfunc.j2', dest_file: '.zshfunc' }
        - { src: 'zsh/zshrc.j2', dest_file: '.zshrc' }
      loop_control:
        loop_var: config_file
      become: false

    - name: zsh - Set config dir
      ansible.builtin.file:
        src: '{{os_homedir}}/{{ user_name }}/.config/zsh/.zshenv'
        dest: '{{os_homedir}}/{{ user_name }}/.zshenv'
        state: link
      become: false

    - name: zsh - Change shell
      ansible.builtin.user:
        name: '{{ user_name }}'
        shell: /bin/zsh
      become: true


- name: Install nvim
  block:
    - name: nvim - Install
      block:
        - name: Install
          ansible.builtin.apt:
            name: neovim
          when: ansible_facts['os_family'] != "Darwin"
        - name: nvim - Install
          ansible.builtin.debug:
            msg: "TODO"
          when: ansible_facts['os_family'] == "Darwin"
      become: true
    - name: Configure
      block:
        - name: Config
          block:
            - name: Config (I)
              ansible.builtin.template:
                src: nvim.j2
                dest: '{{os_homedir}}/{{ user_name }}/.vimrc'
                mode: 0755
            - name: Config (II)
              block:
                - name: nvim - Create config dir
                  ansible.builtin.file:
                    path: '{{os_homedir}}/{{ user_name }}/.config/nvim'
                    state: directory
                - name: nvim - nvim config
                  ansible.builtin.copy:
                    dest: '{{os_homedir}}/{{ user_name }}/.config/nvim/init.vim'
                    content: |
                      source ~/.vimrc
          become: false
        - name: "nvim - Set 'alternatives'"
          community.general.alternatives:
            name: '{{ common_nvim_alt.name }}'
            link: '{{ common_nvim_alt.link }}'
            path: '{{ common_nvim_alt.path }}'
          with_items:
            - { name: editor, link: /usr/bin/editor, path: /usr/bin/nvim }
            - { name: vi,     link: /usr/bin/vi,     path: /usr/bin/nvim }
          loop_control:
            loop_var: common_nvim_alt
          when: ansible_facts['os_family'] != "Darwin"
          become: true


- name: Install + configure tmux
  block:
    - name: Install
      block:
        - name: Install tmux
          ansible.builtin.apt:
            name: tmux
            state: present
          when: ansible_facts['os_family'] != "Darwin"
        - name: Install tmux
          ansible.builtin.debug:
            msg: "TODO"
          when: ansible_facts['os_family'] == "Darwin"
      become: true
    - name: Copy config file
      ansible.builtin.template:
        src: tmux.conf.j2
        dest: '{{os_homedir}}/{{ user_name }}/.tmux.conf'
        owner: '{{ user_name }}'
        group: '{{ user_name }}'
        mode: 0644
      become: false
