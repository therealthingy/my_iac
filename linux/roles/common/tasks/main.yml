---
# ---------------------------------- PRE-packages - Distro specific stuff ----------------------------------
- name: Debian pre packages - apt sources
  block:
    - name: Remove CD/DVD install as apt source
      ansible.builtin.replace:
        dest: /etc/apt/sources.list
        regexp: '^(#\s*)?deb cdrom:\[.+\]\/ \w+ (contrib|main) (contrib|main)$'

    # Will have by default prio of 100  (check via `apt-cache policy`)
    - name: Add Backports apt source (to get newer packages backported to the release stable)
      # NOTE: Equivalent command: `sudo add-apt-repository 'deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main'`
      ansible.builtin.apt_repository:
        repo: deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main
        state: present
        filename: backports
        update_cache: yes
  when: ansible_facts.distribution == 'Debian'
  become: true


# WORKAROUND FOR "[...] cannot remove '/var/snap/firefox/common/host-hunspell/en_US.aff': Read-only file system\r\nr":
#  sudo systemctl stop var-snap-firefox-common-host\\x2dhunspell.mount  &&  sudo systemctl disable var-snap-firefox-common-host\\x2dhunspell.mount
- name: Ubuntu pre packages - Snaps
  block:
    - name: Shutdown services, sockets and timers
      ansible.builtin.service:
        name: '{{ item }}'
        state: stopped
        enabled: false
      failed_when: false
      with_items:
        - snapd.apparmor.service
        - snapd.autoimport.service
        - snapd.core-fixup.service
        - snapd.recovery-chooser-trigger.service
        - snapd.seeded.service
        - snapd.service
        - snapd.snap-repair.timer
        - snapd.socket
        - snapd.system-shutdown.service

    - name: Set package names
      ansible.builtin.set_fact:
        snapd_packages:
          #- gir1.2-snapd-1
          #- libsnapd-glib1
          - snapd

    - name: Remove snapd packages
      ansible.builtin.apt:
        name: '{{ item }}'
        state: absent
        purge: true
      with_items: '{{ snapd_packages }}'

    - name: Block snapd from installing again
      # NOTE: ALTERNATIVE command  ??: `sudo apt-mark hold snapd`
      ansible.builtin.template:
        src: apt-snapd-block.pref.j2
        dest: /etc/apt/preferences.d/snapd-block.pref
        mode: 0644

    - name: Cleanup
      ansible.builtin.file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /home/{{ user_name }}/snap
        - /snap
        - /var/snap
        - /var/lib/snapd
        - /var/cache/snapd
        - /run/snapd-snap.socket
        - /run/snapd.socket
        - /etc/apt/apt.conf.d/20snapd.conf
  when: ansible_facts.distribution == 'Ubuntu'
  become: true
# ----------------------------------------------------------------------------------------------------------


- ansible.builtin.include_tasks: '{{ included_common_task }}'
  loop:
    - config.yml
    - packages.yml
  loop_control:
    loop_var: included_common_task


# ---------------------------------- POST packages - Distro specific stuff ----------------------------------
# See https://vitux.com/how-to-disable-enable-automatic-error-reporting-in-ubuntu/
- name: Ubuntu post packages - Disable annoying stuff
  block:
    - name: Uninstall Telemetry/error reporting services
      ansible.builtin.apt:
        name:
          - apport
          - ubuntu-report
          - whoopsie
        state: absent
        purge: true
        clean: true
        autoremove: true
      become: true

    - name: Disable Telemetry/error reporting + Ubuntu services
      community.general.dconf:
        key: '{{ item.key }}'
        value: '{{ item.value }}'
        state: '{{ item.state }}'
      with_items:
        - { key: '/com/ubuntu/update-notifier/show-apport-crashes', value: 'false', state: present }
        - { key: '/com/ubuntu/update-notifier/notify-ubuntu-advantage-available', value: 'false', state: present }
        - { key: '/com/ubuntu/update-notifier/show-livepatch-status-icon', value: 'false', state: present }
      become: false
  when: ansible_facts.distribution == 'Ubuntu'
# -----------------------------------------------------------------------------------------------------------
