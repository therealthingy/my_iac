---
- name: Generate the locale
  become: true
  community.general.locale_gen:
    name: '{{ locale }}'
    state: present


# ---------------------------------- PRE-packages - Distro specific stuff ----------------------------------
- name: 'Debian pre packages - apt sources'
  block:
    - name: 'Remove CD/DVD install as apt source'
      ansible.builtin.replace:
        dest: /etc/apt/sources.list
        regexp: '^(#\s*)?deb cdrom:\[.+\]\/ \w+ (contrib|main) (contrib|main)$'

    # Will have by default prio of 100  (check via `apt-cache policy`)
    - name: 'Add Backports apt source (to get newer packages backported to the release stable)'
      # NOTE: Equivalent command: `sudo add-apt-repository 'deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main'`
      ansible.builtin.apt_repository:
        repo: deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main
        state: present
        filename: backports
        update_cache: yes
  become: true
  when: ansible_facts.distribution == 'Debian'

# ----------------------------------------------------------------------------------------------------------


- include_tasks: '{{ included_common_task }}'
  loop:
    - config.yml
    - packages.yml
  loop_control:
    loop_var: included_common_task


# ---------------------------------- POST packages - Distro specific stuff ----------------------------------
# See https://vitux.com/how-to-disable-enable-automatic-error-reporting-in-ubuntu/
- name: 'Ubuntu post packages - Disable annoying stuff'
  block:
    - name: 'Uninstall Telemetry/error reporting services'
      ansible.builtin.apt:
        name:
          - apport
          - ubuntu-report
          - whoopsie
        state: absent
        purge: true
        clean: true
        autoremove: true

    - name: 'Disable Telemetry/error reporting + Ubuntu services'
      community.general.dconf:
        key: '{{ item.key }}'
        value: '{{ item.value }}'
        state: '{{ item.state }}'
      with_items:
        - { key: '/com/ubuntu/update-notifier/show-apport-crashes', value: 'false', state: present }
        - { key: '/com/ubuntu/update-notifier/notify-ubuntu-advantage-available', value: 'false', state: present }
        - { key: '/com/ubuntu/update-notifier/show-livepatch-status-icon', value: 'false', state: present }
      become: false
  when: ansible_facts.distribution == 'Ubuntu'
# -----------------------------------------------------------------------------------------------------------
