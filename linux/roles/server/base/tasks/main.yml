---
# Check runlevel: `systemctl get-default`  //  Change runlevel: `systemctl set-default multi-user.target`  (runlevels: multi-user.target, graphical.target)
- name: Change default target to multi-user.target
  ansible.builtin.file:
    src: /usr/lib/systemd/system/multi-user.target
    dest: /etc/systemd/system/default.target
    state: link
  become: true


- name: Install msmtp-mailer + set it up (for e.g., mailing for notifications)
  block:
    - name: Set config as vars for role
      ansible.builtin.set_fact:
        msmtp_accounts:
          - account: notifications
            host: '{{ notifications_mail_config.smtp_host }}'
            port: '{{ notifications_mail_config.smtp_port }}'
            auth: "on"
            from: '{{ notifications_mail_config.smtp_username }}'
            user: '{{ notifications_mail_config.smtp_username }}'
            password: '{{ notifications_mail_config.smtp_password }}'
        msmtp_alias_default: '{{ notifications_mail_config.system_admin_mail }}'                # Affects aliases in `/etc/aliases`
        msmtp_log: no
        msmtp_remove_mtas: true
        msmtp_default_account: notifications
        msmtp_domain: '{{ domainname }}'
      become: false

    - block:
      - name: "Run 'chriswayg.msmtp-mailer ' role"
        ansible.builtin.include_role:
          name: chriswayg.msmtp-mailer
      become: true                               # UGLY workaround since `become` isn't allowed in `include_role`
  when: notifications_mail_config is defined


- ansible.builtin.include_tasks: config-unattended_updates.yml


- name: Install login system stats script
  ansible.builtin.template:
    src: zprofile.j2
    dest: /etc/zsh/zprofile
    owner: root
    group: root
    mode: 0644
  become: true


- name: Configure git
  community.general.git_config:
    name:  '{{ config_var.name }}'
    value:  '{{ config_var.value }}'
    scope:  '{{ config_var.scope }}'
  with_items:
    - { name: 'core.editor', value: 'editor', scope: global }
    - { name: 'user.name', value: '{{ git_config.name }}', scope: global }
    - { name: 'user.email', value: '{{ git_config.email }}', scope: global }
  loop_control:
    loop_var: config_var
