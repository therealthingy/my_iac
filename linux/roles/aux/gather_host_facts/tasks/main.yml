---
- name: Gather host data and set it as facts
  block:
    - name: Gather data
      block:
        # --  User data  --
        - name: Get username of current user
          ansible.builtin.shell: whoami                               # ALTERNATIVE 4 username: `id -u -n` OR ansible_user_id
          register: result_username
          changed_when: false

        - name: Get uid of current user
          ansible.builtin.shell: id -u
          register: result_uid
          changed_when: false

        - name: Get gid of current user
          ansible.builtin.shell: id -g
          register: result_gid
          changed_when: false

        - name: Get gid of the docker group
          ansible.builtin.shell: >
                    getent group |
                    grep docker |
                    awk -F: '{printf "%d", $3}'
          register: result_docker_gid
          changed_when: false

        # --  System info  --
        - name: Get DEB architecture
          ansible.builtin.shell: dpkg --print-architecture            # ALTERNATIVE for arch.: ansible_architecture
          register: result_deb_architecture
          changed_when: false

        - name: Get kernel release
          ansible.builtin.shell: uname -r
          register: result_kernel_release
          changed_when: false

        - name: '[Ubuntu] Check whether NetworkManager is used'        # Ubuntu Desktop = NetworkManager, Server = systemd-networkd
          block:
            - name: Check for nmcli
              ansible.builtin.command: which nmcli
              failed_when: false
              changed_when: false
              check_mode: false
              register: result_ubuntu_nmcli
            - name: Set networking service name
              ansible.builtin.set_fact:
                ubuntu_networking_service: "{% if result_ubuntu_nmcli == 0 %}NetworkManager{% else %}systemd-networkd{% endif %}'"
          when: ansible_facts.distribution == 'Ubuntu'


    - name: Set variables (as facts)
      ansible.builtin.set_fact:
        user_name: '{{ result_username.stdout }}'
        user_group_name: '{{ result_username.stdout }}'
        user_uid: '{{ result_uid.stdout }}'
        user_gid: '{{ result_gid.stdout }}'
        docker_gid: '{{ result_docker_gid.stdout }}'
        www_user:
          uid: '{{ result_uid.stdout }}'           # $$$$$$$$$$$$$$$$$$$$$  TODO: CREATE EXTRA USER â€¦  $$$$$$$$$$$$$$$$$$$$$
          gid: '{{ result_docker_gid.stdout }}'
        cpu_architecture: '{{ result_deb_architecture.stdout }}'
        kernel_release: '{{ result_kernel_release.stdout }}'
        networking_service: "{% if ansible_facts.distribution == 'Debian' %}networking{% else %}'{{ ubuntu_networking_service }}'{% endif %}"
        gathered_host_facts: True
  when: gathered_host_facts is not defined
  become: false


#-  ansible.builtin.debug:
#    msg: user_name={{ user_name }}, user_uid={{ user_uid }}, docker_gid={{ docker_gid }}, kernel_release={{ kernel_release }}, cpu_architecture={{ cpu_architecture }}
