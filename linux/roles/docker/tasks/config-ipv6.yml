---
- name: Copy docker daemon IPv6 config file
  ansible.builtin.copy:       # TODO: ADD {{ ansible_managed }} in template
    content: |
      {
        "ipv6": true,
        "fixed-cidr-v6": "2001:db8:abc1::/64"
      }
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  notify: restart docker daemon
  become: true

# Equivalent command: `docker network create --subnet="2001:db8:1::/64" --ipv6 traefik`
- name: Create a network w/ IPv6 IPAM config
  community.docker.docker_network:
    name: '{{ docker_default_network }}'
    enable_ipv6: true
    ipam_config:
      - subnet: 2001:db8:1::/64
  become: false



# TODO: WORKAROUND -- Fix routing:  Currently IPv6 w/ NAT (https://blog.widodh.nl/2017/04/docker-containers-with-ipv6-behind-nat/) since network prefix (provided by ISP) changes constantly :/
- name: "Configure IPv6 NAT  (TODO: REVISE)"
  block:
    - name: Install iptables
      ansible.builtin.apt:
        name:
          - iptables
          - iptables-persistent
        state: present
      become: true

    # Equivalent command  (+ persist):
    #   Apply rules:`ip6tables -t nat -A POSTROUTING  -s 2001:db8:1::/64 ! -o docker0     -j MASQUERADE`   (reference: https://linux.die.net/man/8/ip6tables)
    #                           table  Append <chain>  Source               Out-Interface  Jump  (target, i.e., what to do if the packet matches it ??)
    #   Persist rules: `sudo sh -c "ip6tables-save > /etc/iptables/rules.v6"`
    # Validation:
    #   Whether rule was applied: `sudo ip6tables -t nat -n -L`
    #   Whether 'correct' response ip address is used  (otherwise request- & response ip won't match): `ip route get <dst-in-network>`
    #   Docker container connectivity: `docker run --network=reverse_proxy --rm -t busybox ping6 -c 4 google.com`
    - name: Copy iptable config tables
      ansible.builtin.template:
        src: rules.v6.j2           # TODO: INLINE ONCE SUPPORTED BY MODULE
        dest: /etc/iptables/rules.v6
        owner: root
        group: root
        mode: 0644
      notify: restart networking daemon
      become: true
