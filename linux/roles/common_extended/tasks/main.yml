---
- name: Install file general purpose tools
  block:
    - name: '[Darwin / Debian/Ubuntu]'
      ansible.builtin.package:
        name:
          - detox                         # Renames files to make them easier to work w/ under Unix & related OSes
          - tree
          - rename
          - dos2unix
          - fdupes
          - rsync
          - rclone                        # Cloud storage management software
      become: "{{ 'true' if ansible_facts['os_family'] != \"Darwin\" else 'false' }}"
    - name: '[Debian/Ubuntu]'
      ansible.builtin.apt:
        name:
          - libc-bin                      # Collection of helper programs, so called binary tools, that work in conjunction with libc  (`iconv`, ..)
          - file
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'
    - name: '[Darwin]'
      community.general.homebrew:
        name:
        - gnu-sed
        - gawk
        - grep
      become: false
      when: ansible_facts.os_family == 'Darwin'

- name: '[Debian/Ubuntu] Install file archiving tools'
  ansible.builtin.apt:
    name:
      - zip
      - unzip
    state: present
  become: true
  when: ansible_facts.os_family != 'Darwin'

- name: Install backup tools
  ansible.builtin.apt:
    name:
      - borgbackup
    state: present
  become: true
  when: ansible_facts.os_family != 'Darwin'

- name: Monitoring tools
  block:
    - name: Install monitoring tools (I)
      block:
        - name: '[Debian/Ubuntu]'
          ansible.builtin.apt:
            name:
              - atop
              - dstat                         # System monitoring tool  (allows monitoring system resources such as cpu, memory, disk & network stats) -> replacement 4 `vmstat`, `iostat` & `ifstat`
              - psmisc                        # Utilities that use the proc file-system (`fuser` - Identifies processes using files or sockets, `killall` - kills processes by name, `prtstat` - prints process statistics, `pslog` - prints log path(s) of a process, `pstree` - shows currently running processes as a tree, `peekfd` - shows data travelling over a fildes)
              - iotop
              - powertop
              - sysstat                       # `sar` (can be used 2 monitor Linux system’s resources like CPU usage, memory utilization, I/O devices consumption, etc.), `iostat`
              - usbutils                      # `lsusb`
            state: present
          when: ansible_facts.os_family != 'Darwin'
        - name: '[Darwin]'
          community.general.homebrew:
            name:
              - lsusb
              - pidof
              - smartmontools
          become: false
          when: ansible_facts.os_family == 'Darwin'
    - name: Install monitoring tools (II)
      ansible.builtin.apt:
        name:
          - smartmontools                 # `smartctl` & `smartd` 4 controlling & monitoring SMART storage
          - hdparm                        # Allows setting & viewing ATA hd drive HW params & test performance
          - nvme-cli
          - lm-sensors                    # `sensors`
      when:
        - ansible_facts.os_family != 'Darwin'
        - "'rpis' not in group_names"
        - "'vmware_vms' not in group_names"
  become: true

- name: Install networking tools
  block:
    - name: '[Darwin / Debian/Ubuntu]'
      ansible.builtin.package:
        name:
          - iperf
          - speedtest-cli
          - nmap                          # Contains also `ncat` on macOS ??!
          - socat
          - wget
          - aria2                         # Download tool  (SEE: https://aria2.github.io/); cmd: `aria2c``
      become: "{{ 'true' if ansible_facts.os_family != \"Darwin\" else 'false' }}"
    - name: '[Debian/Ubuntu]'
      ansible.builtin.apt:
        name:
          - netcat-openbsd
          - dnsutils                      # `dig`
          - iproute2                      # `ip`;   NOTE: package 'net-tools' has been deprecated
          - traceroute
          - tcpdump
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'

- name: Administration tools
  block:
    - name: '[Darwin / Debian/Ubuntu]'
      ansible.builtin.package:
        name:
          - mosh
          - tmux
      become: "{{ 'true' if ansible_facts['os_family'] != \"Darwin\" else 'false' }}"
    - name: '[Debian/Ubuntu]'
      ansible.builtin.apt:
        name:
#          - aptitude
          - util-linux                    # Most likely already installed (contains MANY utilities)  (`lscpu`, `lspci`, …)
          - software-properties-common    # abstraction of the used apt repositories (allows easily managing distribution & independent software vendor software sources)  -> `add-apt-repository`, `apt-add-repository`
          #- initramfs-tools
          #- stow                         # See https://www.gnu.org/software/stow/
          # FS stuff
          - cloud-guest-utils             # `growpart`
          #- fuse
          #- ntfs-3g                       # Read/write NTFS driver 4 FUSE
          #- libapfs-utils                 # Contains `fsapfsinfo`, an APFS information retrieval utility, & `fpafsmount`, a FUSE-based APFS filesystem implementation
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'
    - name: '[Darwin]'
      community.general.homebrew:
        name:
          - terminal-notifier
      become: false
      when: ansible_facts.os_family == 'Darwin'


- name: Install privacy tools
  block:
    - name: '[Darwin / Debian/Ubuntu]'
      ansible.builtin.package:
        name:
          - ccrypt
      become: "{{ 'true' if ansible_facts['os_family'] != \"Darwin\" else 'false' }}"
    - name: '[Debian/Ubuntu]'
      ansible.builtin.apt:
        name:
          - zerofree
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'


- name: Install shell related tools
  block:
    - name: '[Darwin / Ubuntu/Debian]'
      ansible.builtin.package:
        name:
          - moreutils
          - parallel                      # NOTE: Installs also `parallel` like `moreutils`  (but seems 2 be newer version)
          - pv
      become: "{{ 'true' if ansible_facts['os_family'] != \"Darwin\" else 'false' }}"
    - name: '[Ubuntu/Debian]'
      ansible.builtin.apt:
        name:
          - procps                        # `watch`, `pmap` command
          - uuid
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'
    - name: '[Darwin]'
      community.general.homebrew:
        name:
          - watch
          - gnu-time
      become: false
      when: ansible_facts.os_family == 'Darwin'



- name: Copy config for packages
  ansible.builtin.template:
    src: '{{ common_package_file.src }}.j2'
    dest: '{{ common_package_file.dest }}'
    owner: '{{ user_name }}'
    group: '{{ user_group_name }}'
    mode: 0644
  become: false
  with_items:
    # tmux
    - { src: 'tmux.conf', dest: '{{os_homedir}}/{{ user_name }}/.tmux.conf' }
  loop_control:
    loop_var: common_package_file
