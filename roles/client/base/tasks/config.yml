---
- name: Setup GNOME
  block:
    - name: Install dconf edtior
      ansible.builtin.apt:
        name: dconf-editor
        state: present
      become: true

    - name: '[Ubuntu] Install GNOME extension manager'
      ansible.builtin.apt:
        name: gnome-shell-extension-manager
        state: present
      when: ansible_facts.distribution == 'Ubuntu'
      become: true

    # NOTE: List extensions: `gnome-extensions list --enabled`
    - name: Install GNOME extensions
      block:
        - name: Install dependencies for GNOME extensions
          ansible.builtin.apt:
            name:
              - gir1.2-gtop-2.0                     # Top Hat  (like iStats menu 4 mac)
            state: present
          become: true

        - name: "'Determine' which extensions shall be installed"
          block:
            - name: Set config as vars
              ansible.builtin.set_fact:
                gnome_extensions:  # (ids are derived from URL, e.g., https://extensions.gnome.org/extension/307/dash-to-dock/)
                    - id: 2087                      # Desktop Icons NG (DING)
                      enable: true       # TODO: Currently not working ??!!
                    - id: 3193                      # Blur my Shell
                      enable: true
                    - id: 5219                      # Top Hat  (like iStats menu 4 mac)
                      enable: true
                    - id: 2                         # Move Clock  (Move clock to left of status menu button)
                      enable: true
                    - id: 4839                      # Clipboard history
                      enable: true
                    - id: 2236                      # Night Theme Switcher     (TODO: ALLEGEDLY NOT WORKING ON UBUNTU, BUT WORKS IN PRAXIS) ??
                      enable: true
#                    - id: 3438                      # Jiggle  (highlights the cursor position when the mouse is moved rapidly like on mac)   $$$$$$$$$$$$$$$$$$$  TOOD: ADD BACK ONCE SUPPORTED (https://github.com/jeffchannell/jiggle/pull/68)  $$$$$$$$$$$$$$$$$$$
#                      enable: true
                    # TODO (for non-vms): caffeine, cpufreq, wireguard-indicator

            - name: Debian - Set distro specific stuff
              ansible.builtin.set_fact:
                # Dash to Dock
                gnome_extensions: "{{ gnome_extensions + [ { 'id': 307, 'enable': true } ]  }}"
              when: ansible_facts.distribution == 'Debian'

        - name: "Run 'petermosmans.customize-gnome' role"
          ansible.builtin.include_role:
            name: petermosmans.customize-gnome

    # HOW2: gesettings tool  (e.g., `gsettings get org.gnome.desktop.input-sources sources`); example: https://gist.github.com/carlwgeorge/c560a532b6929f49d9c0df52f75a68ae
    - name: GNOME
      block:
        - name: Set config
          block:
            - name: '[Ubuntu]'
              ansible.builtin.set_fact:
                gnome_button_layout: 'close,minimize,maximize:'
              when: ansible_facts.distribution == 'Ubuntu'
            - name: '[Debian]'
              ansible.builtin.set_fact:
                gnome_button_layout: 'close:'
              when: ansible_facts.distribution == 'Debian'

        - name: GNOME - Set settings
          community.general.dconf:
            key: '{{ gnome_setting.key }}'
            value: '{{ gnome_setting.value }}'
            state: '{{ gnome_setting.state }}'
          with_items:
            # !!  BE AWARE: Schema for gtk (used by `gsettings`): `org.gtk.Settings.FileChooser` v.s. Path (used by dconf editor and Ansible module): `org.gtk.settings.file-chooser`  !!
          # --  General settings  --
            - key: '/org/gnome/desktop/input-sources/sources'
              value: "[('xkb', '{{ keyboard.layout }}')]"
              state: present

          # --  General Behavior  --
            - key: '/org/gnome/desktop/privacy/show-full-name-in-top-bar'
              value: 'true'
              state: present
            - key: '/org/gnome/desktop/privacy/remember-recent-files'
              value: 'false'
              state: present
            - key: '/org/gnome/desktop/privacy/remove-old-temp-files'
              value: 'true'
              state: present
            - key: '/org/gnome/desktop/sound/event-sounds'
              value: 'false'
              state: present
            - key: '/org/gnome/desktop/wm/preferences/audible-bell'                # TODO: Use `visual-bell` bell instead (currently not suitable (flashes entire screen))
              value: 'false'
              state: present
#            - key: '/org/gnome/desktop/interface/gtk-enable-primary-paste'         # TODO:  Disable "Middle-click paste"  (doesn't work 4 Ubuntu 22.04 LTS)
#              value: 'false'
#              state: present
            - key: '/org/gnome/desktop/notifications/show-banners'                 # 'Do not disturb' in Ubuntu's Settings app
              value: 'false'
              state: present
            - key: '/org/gnome/gnome-session/logout-prompt'
              value: 'false'
              state: present
          # -  Privacy  -
            - key: '/org/gnome/desktop/privacy/report-technical-problems'
              value: 'false'
              state: present
            - key: '/org/gnome/desktop/privacy/send-software-usage-stats'
              value: 'false'
              state: present
          # -  Security  -
            - key: '/org/gnome/desktop/media-handling/automount-open'
              value: 'false'
              state: present

          # --  General UI  --
            - key: '/org/gnome/desktop/wm/preferences/button-layout'
              value: "'{{ gnome_button_layout }}'"
              state: present
            - key: '/org/gnome/desktop/interface/clock-format'
              value: "'12h'"
              state: present
            - key: '/org/gtk/settings/file-chooser/clock-format'
              value: "'12h'"
              state: present
            - key: '/org/gnome/shell/favorite-apps'                                # NOTE: Desktop entries for application (.desktop files) reside in '/usr/share/applications/' or '/usr/local/share/applications/'
              value: "[{{ dock_fav_apps|join(', ') }}]"
              state: present
          # --  Extensions  --
          # -  Dock  -
            - key: '/org/gnome/shell/extensions/dash-to-dock/extend-height'
              value: 'false'
              state: present
            - key: '/org/gnome/shell/extensions/dash-to-dock/dock-position'
              value: "'LEFT'"
              state: present
            - key: '/org/gnome/shell/extensions/dash-to-dock/dash-max-icon-size'
              value: '25'
              state: present
            - key: '/org/gnome/shell/extensions/dash-to-dock/dock-fixed'
              value: 'true'
              state: present
            - key: '/org/gnome/shell/extensions/dash-to-dock/click-action'
              value: "'minimize'"
              state: present
          # -  Desktop  -
            - key: '/org/gnome/shell/extensions/ding/show-home'
              value: 'false'
              state: present
            - key: '/org/gnome/shell/extensions/ding/show-trash'
              value: 'false'
              state: present
            - key: '/org/gnome/shell/extensions/ding/icon-size'
              value: "'small'"
              state: present
            - key: '/org/gnome/shell/extensions/ding/show-link-emblem'
              value: 'true'
              state: present
            - key: '/org/gnome/shell/extensions/ding/start-corner'
              value: "'top-left'"
              state: present
          # - gnome-clipboard-history -
            - key: '/org/gnome/shell/extensions/clipboard-history/confirm-clear'
              value: 'false'
              state: present

          # --  Apps  --
          # -  Nautilus  --
            - key: '/org/gnome/nautilus/preferences/show-delete-permanently'
              value: 'true'
              state: present
#            - key: '/org/gnome/nautilus/preferences/show-hidden-files'
#              value: 'true'
#              state: present
            - key: '/org/gnome/nautilus/preferences/default-sort-order'
              value: "'type'"                                                   # Possible values: size, type, mtime, atime, starred
              state: present
            - key: '/org/gnome/nautilus/preferences/default-sort-in-reverse-order'
              value: 'false'
              state: present
            - key: '/org/gnome/nautilus/preferences/default-folder-viewer'
              value: "'list-view'"                                              # Possible values: icon-view, list-view
              state: present
            - key: '/org/gnome/nautilus/list-view/default-zoom-level'
              value: "'small'"
              state: present
            - key: '/org/gnome/nautilus/list-view/default-visible-columns'
              value: "['name', 'type', 'size', 'date_modified']"
              state: present
            - key: '/org/gnome/nautilus/list-view/use-tree-view'
              value: 'true'
              state: present
            - key: '/org/gtk/settings/file-chooser/show-hidden'
              value: 'true'
              state: present
          # -  System monitor  -
            - key: '/org/gnome/gnome-system-monitor/show-dependencies'
              value: 'true'
              state: present
            - key: '/org/gnome/gnome-system-monitor/proctree/columns-order'
              value: "[0, 12, 1, 8, 15, 4, 22, 2, 3, 6, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26]"
              state: present
            - key: '/org/gnome/gnome-system-monitor/proctree/col-4-visible'
              value: 'true'
              state: present
          # -  dconf  -
            - { key: '/ca/desrt/dconf-editor/show-warning', value: 'false', state: present }
          loop_control:
            loop_var: gnome_setting

        - name: GNOME - Set settings [BARE-METAL]
          community.general.dconf:
            key: '{{ gnome_setting.key }}'
            value: '{{ gnome_setting.value }}'
            state: '{{ gnome_setting.state }}'
          with_items:
            - key: '/org/gnome/settings-daemon/plugins/color/night-light-enabled'
              value: 'true'
              state: present
          # - General Behavior -
            - key: '/org/gnome/desktop/peripherals/mouse/natural-scroll'
              value: 'true'
              state: present
            - key: '/org/gnome/desktop/peripherals/touchpad/natural-scroll'
              value: 'true'
              state: present
          # - Power -
            - key: '/org/gnome/desktop/session/idle-delay'
              value: 'uint32 900'
              state: present
          loop_control:
            loop_var: gnome_setting
          when: 'hypervisor is not defined or not hypervisor'

        - name: GNOME - Set settings [VMs]
          community.general.dconf:
            key: '{{ gnome_setting.key }}'
            value: '{{ gnome_setting.value }}'
            state: '{{ gnome_setting.state }}'
          with_items:
          # -  Power  -
            - key: '/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type'
              value: "'nothing'"
              state: present
            - key: '/org/gnome/desktop/session/idle-delay'                 # Don't show black screen after idle timeout
              value: 'uint32 0'
              state: present
          loop_control:
            loop_var: gnome_setting
          when: 'hypervisor is defined and hypervisor'
      become: false

    - name: Set installed apps as default
      ansible.builtin.template:
        src: linux/gnome-registered_default_apps.list.j2
        dest: '/{{ os_homedir }}/{{ user.name }}/.config/mimeapps.list'
      become: false
  when:
    - ansible_facts.os_family != 'Darwin'
    - "'GNOME' in desktop_envs"

- name: Ubuntu post packages - Disable Telemetry/error reporting + Ubuntu services
  community.general.dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
    state: '{{ item.state }}'
  with_items:
    - key: '/com/ubuntu/update-notifier/show-apport-crashes'
      value: 'false'
      state: present
    - key: '/com/ubuntu/update-notifier/notify-ubuntu-advantage-available'
      value: 'false'
      state: present
    - key: '/com/ubuntu/update-notifier/show-livepatch-status-icon'
      value: 'false'
      state: present
  become: false
  when: ansible_facts.distribution == 'Ubuntu'


- name: gdm3 - Enable Autologin
  block:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: 'Enable autologin for {{ user.name }}'
      block:
        - name: Set autologin config file
          ansible.builtin.set_fact:
            gdm3_config_file: "{{ 'daemon.conf' if ansible_facts.distribution == 'Debian' else 'custom.conf' }}"
          become: false

        - name: Update config file
          ansible.builtin.replace:
            path: '/etc/gdm3/{{ gdm3_config_file }}'
            # UNMATCH IF NAME is already contained: '^(#\s*|\s*)AutomaticLoginEnable\s*=\s*(true|false)\n^(#\s*|\s*)AutomaticLogin\s*=\s*(?!{{ user.name }}$)\w+$'  (doesn't work -- PROBLEM: name unmatches, which causes it not to be updated if it's commented out)
            regexp: '^#\s*AutomaticLoginEnable\s*=\s*(true|false)\n^#\s*AutomaticLogin\s*=\s*\w+$'
            replace: |
              AutomaticLoginEnable = true
              AutomaticLogin = {{ user.name }}
          become: true
  when:
    - ansible_facts.os_family != 'Darwin'
    - "'gdm3' in ansible_facts.packages"
    - 'hypervisor is defined and hypervisor'    # TODO: Add also `autologin_enabled` value


- name: Perform initial-run only tasks  (which shall never be run again once completed)
  block:
    - name: Check whether tasks should be performed
      ansible.builtin.stat:
        path: '/{{ os_homedir }}/{{ user.name }}/.ansible_first_run_completed'
      register: first_run_completed

    - name: Perform ACTUAL tasks
      block:
        - name: Mute audio (requires PulseAudio)
          block:
            - name: Install PulseAudio
              ansible.builtin.apt:
                name: pulseaudio-utils
                state: present
              become: true
            - name: Mute audio
              ansible.builtin.command: pactl set-sink-mute @DEFAULT_SINK@ true
          when: 'hypervisor is defined and hypervisor'

        - name: Set GNOME settings
          community.general.dconf:
            key: '{{ gnome_setting.key }}'
            value: '{{ gnome_setting.value }}'
            state: '{{ gnome_setting.state }}'
          with_items:
            - key: '/org/gnome/shell/extensions/clipboard-history/private-mode'
              value: 'true'
              state: present
          loop_control:
            loop_var: gnome_setting
          when:
            - ansible_facts.os_family != 'Darwin'
            - "'GNOME' in desktop_envs"
      when: first_run_completed.stat.exists == False

    - name: Store initial-run completed
      ansible.builtin.file:
        path: '/{{ os_homedir }}/{{ user.name }}/.ansible_first_run_completed'
        state: touch
      when: first_run_completed.stat.exists == False
  become: false
  when: ansible_facts.os_family != 'Darwin'    # TODO: REVISE






# ------------------------------------------------------------------------------------------------------------------------------------------------------
# Must be enabled via: System Settings -> Privacy & Security -> Extensions -> Finder
- name: Finder services
  ansible.builtin.unarchive:
    src: 'darwin/finder_workflows/{{ workflow_file }}.tar.gz'
    dest: '/Users/{{user.name}}/Library/Services/'
    creates: '{{ workflow_file }}'
    owner: '{{ user.name }}'
    group: '{{ user.group_name }}'
    mode: 0755
  with_items:
    - 'Clean LaTeX Junk.workflow'
    - 'Combine PDFs.workflow'
    - 'Convert PDFs to images.workflow'
    - 'MP4 to MP3.workflow'
    - 'Video to GIF.workflow'
  loop_control:
    loop_var: workflow_file
  become: false
  when: ansible_facts.os_family == 'Darwin'


# TODO: Merge following stuff w/ GNU/Linux based on type using `block`




- name: Set wallpaper
  block:
    - name: Get current wallpaper
      ansible.builtin.shell: osascript -e 'tell app "Finder" to get posix path of (get desktop picture as alias)'
      register: result_current_wallpaper
      failed_when: false
      changed_when: false     # NOTE: Doesn't work seem 2 work w/ dynamic wallpapers or Ventura live wallpapers
    - name: Set new wallpaper
      ansible.builtin.command: osascript -e 'tell app "Finder" to set desktop picture to POSIX file "{{ wallpaper }}"'
      when: result_current_wallpaper.rc != 0  or  wallpaper != result_current_wallpaper.stdout
  become: false
  when: ansible_facts.os_family == 'Darwin'


- name: 'Config (changes will take effect after logging in again)'
  community.general.osx_defaults:
    domain: '{{ item.domain }}'
    key: '{{ item.key }}'
    type: '{{ item.type }}'
    value: '{{ item.value }}'
    state: present
  with_items:
  # --  UI/UX  --
    - domain: 'com.apple.PowerChime'                 # Disable startup chime;  TODO: `killall PowerChime`
      key: 'ChimeOnNoHardware'
      value: 'true'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                       # Expand save panel by default
      key: 'NSNavPanelExpandedStateForSaveMode'
      value: 'true'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                       # Expand print panel by default
      key: 'PMPrintingExpandedStateForPrint'
      value: 'true'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                       # Save to disk (not to iCloud) by default
      key: 'NSDocumentSaveNewDocumentsToCloud'
      value: 'false'
      type: 'boolean'
    - domain: 'com.apple.print.PrintingPrefs'        # Automatically quit printer app once the print jobs complete
      key: 'Quit When Finished'
      value: 'true'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                       # Disable smart quotes
      key: 'NSAutomaticQuoteSubstitutionEnabled'
      value: 'false'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                       # Disable smart dashes
      key: 'NSAutomaticDashSubstitutionEnabled'
      value: 'false'
      type: 'boolean'
  # --  Trackpad, mouse, keyboard, Bluetooth accessories, & input  --
    - domain: 'NSGlobalDomain'                       # ENABLE press-and-hold (e.g., ń popup after long pressing n, …) for keys in favor of key repeat
      key: 'ApplePressAndHoldEnabled'
      value: 'true'
      type: 'boolean'
    # Set a blazingly fast keyboard repeat rate, and make it happen more quickly   (doesn't make a difference as of now, as press-and-hold is enabled)
    - domain: 'NSGlobalDomain'
      key: 'InitialKeyRepeat'
      value: '20'
      type: 'int'
    - domain: 'NSGlobalDomain'
      key: 'KeyRepeat'
      value: '1'
      type: 'int'
  # Disable auto-correct
    - domain: 'NSGlobalDomain'
      key: 'NSAutomaticSpellingCorrectionEnabled'
      value: 'false'
      type: 'boolean'
  # --  Screen  --
#    - domain: 'com.apple.screencapture'              # Save screenshots to Downloads folder
#      key: 'location'
#      value: '/{{ os_homedir }}/{{ user.name }}/Downloads'
#      type: 'string'
#    - domain: 'com.apple.screencapture'              # Save screenshots in PNG format
#      key: 'type'
#      value: 'png'                                   # Other options: BMP, GIF, JPG, PDF, TIFF
#      type: 'string'
#    - domain: 'com.apple.screencapture'              # Disable shadow in screenshots;     TODO: `killall SystemUIServer`
#      key: 'disable-shadow'
#      value: 'true'
#      type: 'boolean'
  # --  Finder  --
    - domain: 'com.apple.finder'                      # Set Downloads as the default location for new Finder windows
      key: 'NewWindowTarget'
      value: 'PfLo'
      type: 'string'
    - domain: 'com.apple.finder'
      key: 'NewWindowTargetPath'
      value: 'file:///{{ os_homedir }}/{{ user.name }}/Downloads/'
      type: 'string'
  # Show icons for hard drives, servers, and removable media on the desktop
    - domain: 'com.apple.finder'
      key: 'ShowExternalHardDrivesOnDesktop'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.finder'
      key: 'ShowHardDrivesOnDesktop'
      value: 'false'
      type: 'boolean'
    - domain: 'com.apple.finder'
      key: 'ShowMountedServersOnDesktop'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.finder'
      key: 'ShowRemovableMediaOnDesktop'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.finder'                      # Finder: show hidden files by default
      key: 'AppleShowAllFiles'
      value: 'true'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                        # Finder: show all filename extensions
      key: 'AppleShowAllExtensions'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.finder'                      # Disable the warning when changing a file extension
      key: 'FXEnableExtensionChangeWarning'
      value: 'false'
      type: 'boolean'
    - domain: 'com.apple.finder'                      # Finder: DON'T show status bar
      key: 'ShowStatusBar'
      value: 'false'
      type: 'boolean'
    - domain: 'com.apple.finder'                      # Finder: allow text selection in Quick Look
      key: 'QLEnableTextSelection'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.finder'                      # DON'T Display full POSIX path as Finder window title
      key: '_FXShowPosixPathInTitle'
      value: 'false'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                        # Enable spring loading for directories
      key: 'com.apple.springing.enabled'
      value: 'true'
      type: 'boolean'
    - domain: 'NSGlobalDomain'                        # Remove the spring loading delay for directories
      key: 'com.apple.springing.delay'
      value: '0.1'
      type: 'float'
    - domain: 'com.apple.desktopservices'             # Avoid creating .DS_Store files on network volumes
      key: 'DSDontWriteNetworkStores'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.finder'                      # Use column view in all Finder windows by default
      key: 'FXPreferredViewStyle'
      value: 'clmv'                                   # 4-letter codes for the other view modes: `icnv`, `Nlsv`, `clmv`, `Flwv`
      type: 'string'
  # --  Dock, Dashboard, & hot corners  --
    - domain: 'com.apple.Dock'                       # Make Dock icons of hidden applications translucent;  TODO: `killall Dock`
      key: 'showhidden'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.dock'                       # Eliminate Dock reveal delay
      key: 'autohide-time-modifier'
      value: '0'
      type: 'int'
    - domain: 'com.apple.dock'                       # Set the icon size of Dock items
      key: 'tilesize'
      value: '22.0'
      type: 'float'
    - domain: 'com.apple.dock'                       # Speed up Mission Control animations
      key: 'expose-animation-duration'
      value: '0.15'
      type: 'float'
    - domain: 'com.apple.universalaccess'            # DISABLE the 'reduce transparency' option (wastes more GPU cycles, but looks slick)
      key: 'reduceTransparency'
      value: 'false'
      type: 'boolean'
    # Hot corners
    # Possible values:
    #  0: no-op
    #  2: Mission Control
    #  3: Show application windows
    #  4: Desktop
    #  5: Start screen saver
    #  6: Disable screen saver
    #  7: Dashboard
    # 10: Put display to sleep
    # 11: Launchpad
    # 12: Notification Center
    # Bottom right screen corner → Mission Control
    - domain: 'com.apple.dock'
      key: 'wvous-br-corner'
      value: '0'
      type: 'int'
    - domain: 'com.apple.dock'
      key: 'wvous-br-modifier'
      value: '0'
      type: 'int'
    - domain: 'com.apple.dock'
      key: 'wvous-tr-corner'
      value: '0'
      type: 'int'
    - domain: 'com.apple.dock'
      key: 'wvous-tr-modifier'
      value: '0'
      type: 'int'
    - domain: 'com.apple.dock'
      key: 'wvous-bl-corner'
      value: '0'
      type: 'int'
    - domain: 'com.apple.dock'
      key: 'wvous-bl-modifier'
      value: '0'
      type: 'int'
#  # --  Safari & WebKit  --                                                # TODO: Doesn't work
#    # Enable the Develop menu and the Web Inspector in Safari
#    - domain: 'com.apple.Safari'
#      key: 'IncludeDevelopMenu'
#      value: 'true'
#      type: 'boolean'
#    - domain: 'com.apple.Safari'
#      key: 'WebKitDeveloperExtrasEnabledPreferenceKey'
#      value: 'true'
#      type: 'boolean'
#    - domain: 'com.apple.Safari'
#      key: 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled'
#      value: 'true'
#      type: 'boolean'
#  # Add a context menu item for showing the Web Inspector in web views
#    - domain: 'NSGlobalDomain'
#      key: 'WebKitDeveloperExtras'
#      value: 'true'
#      type: 'boolean'
#  # --  Mail  --
#    - domain: 'com.apple.mail'                       # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
#      key: 'AddressesIncludeNameOnPasteboard'
#      value: 'false'
#      type: 'boolean'
  # --  Activity Monitor  --
    - domain: 'com.apple.ActivityMonitor'            # Show the main window when launching Activity Monitor
      key: 'OpenMainWindow'
      value: 'true'
      type: 'boolean'
    - domain: 'com.apple.ActivityMonitor'            # Show all processes in Activity Monitor
      key: 'ShowCategory'
      value: '0'
      type: 'int'
  # -- TODO:  Messages  --
    ## Disable smart quotes as it’s annoying for messages that contain code
    #defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false
    ## Disable continuous spell checking
    #defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false
  become: false
  when: ansible_facts.os_family == 'Darwin'


- name: '[Darwin] `systemsetup` settings'
  ansible.builtin.include_tasks: darwin/systemsetup.yml
  loop_control:
    loop_var: systemsetup_setting
  with_items:
    - setting: restartfreeze
      value: true
    - setting: computersleep
      value: '{{ 1 if workstation_is_a_macbook else 0 }}'
      type: int
    - setting: displaysleep
      value: '{{ 5 if workstation_is_a_macbook else 15 }}'
      type: int
    - setting: harddisksleep
      value: 0
      type: int
  when: ansible_facts.os_family == 'Darwin'
