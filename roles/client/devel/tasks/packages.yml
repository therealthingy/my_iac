---
- name: Install network tools
  block:
    - name: "[Darwin] Install homebrew packages"
      ansible.builtin.include_tasks: ../../base/tasks/darwin/homebrew_casks.yml
      vars:
        packages_homebrew_casks:
          - dir: Network
            packages:
              - wireshark-app
    - name: "[Debian/Ubuntu] Install apt packages"
      ansible.builtin.apt:
        name:
          # NOTE: Reconfigure "capture packets as non-superuser" => `sudo dpkg-reconfigure wireshark-common`
          - wireshark
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'

- name: Install VSCodium
  ansible.builtin.include_tasks: package-vscodium.yml

- name: Install GUI hexeditor
  block:
    - name: "[Darwin] Install homebrew packages"
      ansible.builtin.include_tasks: ../../base/tasks/darwin/homebrew_casks.yml
      vars:
        packages_homebrew_casks: # TODO: Add flatpak counterparts 4 linux & check whether VM
          - dir: Development/Editors
            packages:
              - imhex
    - name: "[Debian/Ubuntu] Install flatpak packages"
      community.general.flatpak:
        name:
          - net.werwolv.ImHex
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'

- name: Install ghidra
  block:
    - name: "[Darwin]"
      ansible.builtin.include_tasks: ../../base/tasks/darwin/homebrew_casks.yml
      vars:
        packages_homebrew_casks:
          - dir: Development
            packages:
              - ghidra
    - name: "[Debian/Ubuntu]"
      block:
        - community.general.flatpak:
            name:
              - org.ghidra_sre.Ghidra
            state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'

- name: Install git tools
  block:
    - name: "[Darwin] Install homebrew packages"
      ansible.builtin.include_tasks: ../../base/tasks/darwin/homebrew_casks.yml
      vars:
        packages_homebrew_casks:
          - dir: Development
            packages:
              - sourcetree
    #- name: '[Debian/Ubuntu] Install flatpak packages'
    #  community.general.flatpak:
    #    name:
    #      - com.syntevo.SmartGit
    #    state: present
    #  become: true
    #  when: ansible_facts.os_family != 'Darwin'
    - name: Fix sourcetreee git-crypt # SEE: https://jira.atlassian.com/browse/SRCTREE-2511
      ansible.builtin.file:
        src: "/{{ homebrew_arch_prefix }}/bin/git-crypt"
        dest: /Applications/Development/Sourcetree.app/Contents/Resources/git_local/bin/git-crypt
        state: link
      become: false
      when: ansible_facts.os_family == 'Darwin'

- name: "[Darwin] iterm"
  block:
    - name: Install
      ansible.builtin.include_tasks: ../../base/tasks/darwin/homebrew_casks.yml
      vars:
        packages_homebrew_casks: # TODO: Add flatpak counterparts 4 linux & check whether VM
          - dir: Development
            packages:
              - iterm2
    - name: "Apps: config"
      block:
        - name: Create dir
          ansible.builtin.file:
            path: "/{{ os_homedir }}/{{ user.name }}/.config/iterm2"
            state: directory
            owner: "{{ user.name }}"
            group: "{{ user.group_name }}"
            mode: 0755
        - name: Copy config
          ansible.builtin.copy:
            src: apps/com.googlecode.iterm2.plist
            dest: "/{{ os_homedir }}/{{ user.name }}/.config/iterm2/com.googlecode.iterm2.plist"
            mode: 0755
        - name: Set config
          community.general.osx_defaults:
            domain: com.googlecode.iterm2
            key: "{{ item.key }}"
            type: "{{ item.type }}"
            value: "{{ item.value }}"
            state: present
          with_items:
            - key: "PrefsCustomFolder"
              value: "/{{ os_homedir }}/{{ user.name }}/.config/iterm2/"
              type: "string"
            - key: "LoadPrefsFromCustomFolder"
              value: "true"
              type: "bool"
  when: ansible_facts.os_family == 'Darwin'
  become: false

- name: Install db tools
  block:
    - name: "[Darwin] Install homebrew packages"
      ansible.builtin.include_tasks: ../../base/tasks/darwin/homebrew_casks.yml
      vars:
        packages_homebrew_casks: # TODO: Add flatpak counterparts 4 linux & check whether VM
          - dir: Development/DB
            packages:
              - db-browser-for-sqlite
              - mysqlworkbench
              - sequel-ace
    - name: "[Debian/Ubuntu] Install flatpak packages"
      community.general.flatpak:
        name:
          - org.sqlitebrowser.sqlitebrowser
          - io.dbeaver.DBeaverCommunity
        state: present
      become: true
      when: ansible_facts.os_family != 'Darwin'

- name: Install misc. tools
  block:
    - name: "[Ubuntu]" # Repo: https://github.com/bkw777/mainline  (tool 4 downloading & installing pre-compiled kernels)
      block:
        - name: mainline - Add apt repo
          # NOTE: Equivalent command: `sudo add-apt-repository ppa:cappelikan/ppa`
          ansible.builtin.deb822_repository:
            name: cappelikan-mainline
            uris: https://ppa.launchpadcontent.net/cappelikan/ppa/ubuntu/
            suites: "{{ ansible_distribution_release }}"
            components: main
          register: mainline_repo_added
        - name: mainline - Update apt cache
          ansible.builtin.apt:
            update_cache: true
          when: mainline_repo_added.changed == True

        - name: mainline - Install
          ansible.builtin.apt:
            name: mainline
      become: true
      when: ansible_facts.distribution == 'Ubuntu'
