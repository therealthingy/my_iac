---
- name: Install
  block:
    - name: Add apt repo and update cache
      ansible.builtin.apt_repository:
        repo: ppa:maveonair/helix-editor
        state: present
        update_cache: true
      when: ansible_facts.distribution == 'Ubuntu'
      become: true
    - name: Install it
      ansible.builtin.package:
        name: helix
      become: '{{ package_manager_become }}'

# TODO: UBUNTU
- name: LSPs
  block:
    - name: '[Darwin]'
      community.general.homebrew:
        name:
          - texlab
          - ansible-language-server
          - yaml-language-server
          - taplo
          - bash-language-server
          - sql-language-server
          - lua-language-server
      when: ansible_facts.os_family == 'Darwin'

    - name: '[Darwin / Debian/Ubuntu]'
      block:
        - name: Install packages
          community.general.pipx:
            name: '{{ pip_package }}'
            state: latest
            install_deps: true
            executable: pipx
          with_items:
            # Helix
            - python-lsp-server
            - debugpy
            # VSCode   (TODO: ALSO REQUIRED 4 HELIX ??!)
            - ruff           # Python formatter + linter
            - ruff-lsp
          loop_control:
            loop_var: pip_package
        - name: Inject packages
          community.general.pipx:
            name: '{{ package.name }}'
            state: inject
            inject_packages: '{{ package.packages }}'
            executable: pipx
          with_items:
            - name: 'python-lsp-server'
              packages: ['python-lsp-ruff', 'python-lsp-black']
          loop_control:
            loop_var: package
  become: false

# TODO: https://schembri.me/post/neovim-everywhere-on-macos/
- name: "[Darwin] Post Install -- Finder integration"
  block:
    - name: Install app
      block:
        - ansible.builtin.file:
            path: '/Applications/Development/Editors'
            state: directory
            owner: '{{ user.name }}'
            group: '{{user.group_name}}'
            mode: 0755
        - ansible.builtin.unarchive:
            src: 'apps/Helix-iTerm.app.tar.gz'
            dest: '/Applications/Development/Editors/'
            creates: Helix-iTerm.app
      become: false
      when: ansible_facts.os_family == 'Darwin'
  become: false
  when: ansible_facts.os_family == 'Darwin'


- name: Config
  ansible.builtin.git:
    repo: git@github.com:therealthingy/dothelix.git
    dest: '{{ os_homedir }}/{{ user.name }}/.config/helix/'
    clone: true
    #depth: 1
    update: true
  changed_when: false
  #register: repo_clone
  failed_when: false
  #  - repo_clone.failed
  #  - not 'Local modifications exist in the destination' in repo_clone.msg
  become: false
