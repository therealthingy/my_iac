---
- ansible.builtin.include_tasks: "{{ included_dev_server_task }}"
  loop:
    - packages-sysdevel.yml
    - packages-python.yml
    - packages-java.yml
    - packages-helix.yml
  loop_control:
    loop_var: included_dev_server_task

- name: "Tools // LSPs"
  block:
    - name: "[Darwin / Debian/Ubuntu]"
      block:
        - name: Install packages
          community.general.pipx:
            name: "{{ pip_package }}"
            state: latest
            install_deps: true
            executable: pipx
          with_items:
            # VSCode   (TODO: ALSO REQUIRED 4 HELIX ??!)
            - ruff # Python formatter + linter
            - cmakelang # `cmake-format`
          loop_control:
            loop_var: pip_package
        - name: Inject packages
          community.general.pipx:
            name: "{{ package.name }}"
            state: inject
            inject_packages: "{{ package.packages }}"
            executable: pipx
          with_items:
            - name: "cmakelang"
              packages: ["pyyaml"] # TODO: OTHERWISE: "‚ùØ cmake-format --dump-config yaml"  results in "ModuleNotFoundError: No module named 'yaml'"
          loop_control:
            loop_var: package
  become: false

- name: Install misc tools
  block:
    - name: "[Darwin / Debian/Ubuntu]"
      ansible.builtin.package:
        name:
          - graphviz # TODO: Apparently required by kcachegrind  ??
          #- flashrom
          #- jq
          #- httpie                   # Human-friendly HTTP client for the API era
      become: "{{ package_manager_become }}"
    #- name: '[Debian/Ubuntu]'
    #  ansible.builtin.apt:
    #    name:
    #      - sqlite3                   # SQLite CLI
    #    state: present
    #  when: ansible_facts.os_family != 'Darwin'
    #- name: '[Darwin]'
    #  community.general.homebrew:
    #    name:
    #      - sqlite
    #  become: false
    #  when: ansible_facts.os_family == 'Darwin'
